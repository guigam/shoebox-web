<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns:ui="http://java.sun.com/jsf/facelets"
                template="./../templateRapport.xhtml"
                xmlns:rich="http://richfaces.org/rich"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:a4j="http://richfaces.org/a4j">
        <ui:define name="message" >
        <rich:messages styleClass="globalMessages" >
            <f:facet name="message">
                <h:graphicImage  value="/img/error.png"/>
            </f:facet>
        </rich:messages>
           <a4j:status>
                <f:facet name="start">
                    <h:graphicImage  value="/icons/searching_progress.gif"/>
                </f:facet>
            </a4j:status>
    </ui:define>
    <ui:define name="content">
        <script type="text/javascript">
  // Load the Visualization API and the piechart package.
  google.load('visualization', '1', {'packages':['corechart']});

  // Set a callback to run when the Google Visualization API is loaded.
  google.setOnLoadCallback(drawChart);
  
  function drawChart() {
    var data = new google.visualization.DataTable();
// Declare columns and rows.
data.addColumn('string', 'Task');  // Column 0 is type string and has label "Task".
data.addColumn('number', 'Hours per Day'); // Column 1 is type number and has label "Hours per Day".

// Add data.
data.addRows(#{gsCommandes.data});
    var chart = new google.visualization.PieChart(document.getElementById('my_chart_div'));
    chart.draw(data, {width: 400, height: 240, is3D: true, title: 'My Daily Activities'});
  }
</script>
        
        
        
         <rich:panel>
             <h:outputText value="#{msg.titre_bienvenueRapport}" styleClass="titrePanel"/>
                <rich:separator width="100%"/>
                <rich:spacer height="10"/>
                <h:panelGrid columns="3" width="100%">
                    <rich:panel header="#{msg.lib_totalEntree}">
                        <h:outputText value="#{gsResultat.totalEntree}" styleClass="titreLibelle">
                            <f:convertNumber type="currency" maxFractionDigits="#{gsLogin.currentFormatDevise.apresVirgule}" currencySymbol = "#{gsLogin.currentFormatDevise.curremcy}"/>
                        </h:outputText>
                    </rich:panel>
                    <rich:panel header="#{msg.lib_totalSortis}">
                        <h:outputText value="#{gsResultat.totalSortis}" styleClass="titreLibelle">
                        <f:convertNumber type="currency" maxFractionDigits="#{gsLogin.currentFormatDevise.apresVirgule}" currencySymbol = "#{gsLogin.currentFormatDevise.curremcy}"/>
                        </h:outputText>
                    </rich:panel>
                    <rich:panel header="#{msg.lib_totalCharge}">
                        <h:outputText value="#{gsResultat.totalCharge}" styleClass="titreLibelle">
                        <f:convertNumber type="currency" maxFractionDigits="#{gsLogin.currentFormatDevise.apresVirgule}" currencySymbol = "#{gsLogin.currentFormatDevise.curremcy}"/>
                        </h:outputText>
                    </rich:panel>
                </h:panelGrid>
                <rich:panel style="background-color: white; width: 100%" >
                <h:outputText value="#{msg.lib_balance}" styleClass="sousTitrePanel"/>
                <rich:spacer width="10"/>
                <h:outputText value="#{gsResultat.totalEntree - gsResultat.totalSortis - gsResultat.totalCharge}" styleClass="titreMontantTotal">
                <f:convertNumber type="currency" maxFractionDigits="#{gsLogin.currentFormatDevise.apresVirgule}" currencySymbol = "#{gsLogin.currentFormatDevise.curremcy}"/>
                </h:outputText>
                </rich:panel>
                </rich:panel>

        <center> <h:graphicImage value="/images/chart2.jpg" width="300px" height="200px"/></center>
    </ui:define>

</ui:composition>
